- Permitir aceleradores nos campos (ex: numerar em ordem crescente e permitir Alt+1, Alt+2, ....)
- GUI: "efeito ampulheta" no processamento (após o "Finish")
- exibir listagem de variáveis e respectivos valores considerados no início do processamento
- interpretar substituição de variáveis em nomes de diretórios e arquivos em fragmentos
- testar a regra condicional dentro do Velocity usando variavel booleana no Vars
- interpretar o tipo da variavel ao jogar no Vars
- console: se dataType = boolean, perguntar ao usuário no formato "[S/n]"
- interpretar possíveis variantes do booleano (ex: S/N, Y/N, true/false, on/off, 1/0)
- criar classe utilitária BooleanUtil para tratar de valores booleanos (parse/input e format/output)
- Fazer o Wizard chamar o template processor no Finish
- Remover borda do ScrollPane da tela de variaveis
- Salvar os valores individualmente no preferences
- Melhorar tratamento exceções
- Internacionalização
- refatoração: retirar Variable do pacote gui (mas essa classe aponta para VisualComponent)
- opção validation="expressão regular" nas variáveis do template.conf
- substituição de trechos de fragmentos, usando expressão regular
  (ex: "app.title=${applicationTitle}" no messages.properties, com variável não obrigatória)

-----

1) Gerar zip
	jar FULL
	bin/demoiselle.sh ??
	templates/<templates fornecidos por padraõ>
	README.TXT ou INSTALL.TXT
		Criar variavel de ambiente DEMOISELLE_HOME
	Colocar $DEMOISELLE_HOME/bin no PATH

2) Execução
 
- demoiselle <caminho_completo(absoluto ou relativo) | nome_template> [<pasta_saida>] [-vars "<var1=val1&var2=val2"] 
	nos bastidores
		template de entrada 
		- procurar nome do template no diretorio corrente
		- procurar DEMOISELLE_HOME/templates/
		- procurar no home, ex: ~/?demoiselle?/templates/<nome_templates>
		- procurar no /opt/demoiselle/?????
		pasta de saida
		- diretorio corrente

		ser vars não for fornecido porém no template.conf tiver a definição das variáveis, 
		aparece prompt e o usuário será obrigado a colocar o valor durantes a execução

- demoiselle <no_params>
	Abre a tela de selecionar template no template catalog
	No template catalog inicialmente só tem os templates que vem no ZIP do demoiselle
	Ao clicar Next
		Se o template selecionado possui template.conf, vai carregar janela customizada


---
TODO
- Colocar possibilidade obrigatoriedade nos campos, label em negrito, validar, ....
- Salvar ultimas informações utilizadas na geração de cada template no HOME do usuário
- Se não existir arquivo de destino ao tentar adicionar um fragmento
	- opcao 1, criar o arquivo apenas com aquele fragmento
	- opcao 2, mostrar mensagem de erro
	- opcao 3, perguntar se o usuario quer criar ou ignorar....

	
	
http://code.google.com/p/javaparser/
http://stackoverflow.com/questions/2206065/java-parse-java-source-code-extract-methods
http://java-source.net/open-source/parser-generators
http://code.google.com/p/javaparser/wiki/UsingThisParser
http://www.rgagnon.com/javadetails/java-0039.html
http://stackoverflow.com/questions/12173294/compiling-fully-in-memory-with-javax-tools-javacompiler
http://www.accordess.com/wpblog/an-overview-of-java-compilation-api-jsr-199/
http://www.java2s.com/Code/Java/JDK-6/CompileaJavafilewithJavaCompiler.htm
http://mindprod.com/jgloss/snippet/iframe/TestJavaCompiler.java.html
http://www.ibm.com/developerworks/library/j-jcomp/
https://javacc.java.net/doc/installhelp.html





